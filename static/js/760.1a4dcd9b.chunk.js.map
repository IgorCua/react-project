{"version":3,"file":"static/js/760.1a4dcd9b.chunk.js","mappings":"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","sources":["components/TransactionSelect/iconsForSelectCategory.js","webpack://ITD-React-project/./src/pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.module.scss?9482","pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.jsx","webpack://ITD-React-project/./src/pages/StatisticsPage/TransactionsPage/Transactions/Transactions.module.scss?5055","pages/StatisticsPage/TransactionsPage/ModalTransactions/ModalTransactions.jsx","pages/StatisticsPage/TransactionsPage/Transactions/Transactions.jsx","redux/Expenses/expensesSelectors.js","redux/transactions/transactionsSelector.js","webpack://ITD-React-project/./src/components/ModalAddIncome/MoadlAddIncome.module.scss?e566"],"sourcesContent":["import { components } from 'react-select';\nimport Icon from '../Icon/Icon';\nimport c from '../ModalAddIncome/MoadlAddIncome.module.scss';\n\nconst { Option } = components;\n\nexport const IconOption = props => (\n  <Option {...props}>\n    <Icon\n      name={props.data.value}\n      width={18}\n      height={18}\n      secondaryClassName={c.categoryIcon}\n    />\n    {props.data.label}\n  </Option>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionItem\":\"TransactionsItem_transactionItem__I4efX\",\"commentWrapper\":\"TransactionsItem_commentWrapper__NOBZi\",\"transactionThumb\":\"TransactionsItem_transactionThumb__8EK3s\",\"thumb\":\"TransactionsItem_thumb__siEpA\",\"transactionDate\":\"TransactionsItem_transactionDate__i0qAD\",\"transactionComment\":\"TransactionsItem_transactionComment__otRnm\",\"transactionSum\":\"TransactionsItem_transactionSum__heA7p\",\"transactionCategory\":\"TransactionsItem_transactionCategory__udzxZ\",\"buttonThumb\":\"TransactionsItem_buttonThumb__g1kfu\",\"buttonItem\":\"TransactionsItem_buttonItem__xDui1\"};","import moment from 'moment';\nimport Icon from '../../../../components/Icon/Icon';\nimport s from './TransactionsItem.module.scss';\n\nconst TransactionsItem = ({\n  openModal,\n  id,\n  sum,\n  date,\n  category,\n  comment,\n  filterIt,\n}) => {\n\n  return (\n    <li className={s.transactionItem} key={id}>\n      <div className={s.transactionThumb}>\n        <div className={s.commentWrapper}>\n          <p className={s.transactionDate}>\n            {moment(date).format('DD.MM.YYYY')}\n          </p>\n          <p className={s.transactionComment}>{comment}</p>\n        </div>\n\n        <div>\n          <p className={s.transactionSum}>{sum} â‚´</p>\n        </div>\n      </div>\n      <div className={s.thumb}>\n        <p className={s.transactionCategory}>{category}</p>\n        <div className={s.buttonThumb}>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            onClick={openModal}\n            id={id}\n          >\n            <Icon\n              name={'icon-pencil'}\n              width={'22'}\n              height={'22'}\n              className={'icon-pencil'}\n            />\n          </button>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            // onClick={() => dispatch(removeTransaction(id))}\n            onClick={() => filterIt(id)}\n          >\n            <Icon\n              name={'icon-trash'}\n              width={'24'}\n              height={'24'}\n              className={'icon-trash'}\n            />\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionList\":\"Transactions_transactionList__76l1J\",\"formWrapper\":\"Transactions_formWrapper__jwN96\",\"formLabel\":\"Transactions_formLabel__k1ayP\",\"formInput\":\"Transactions_formInput__tc3pe\",\"buttonEdit\":\"Transactions_buttonEdit__vYe-K\",\"buttonCloseModal\":\"Transactions_buttonCloseModal__xCCdw\",\"noTransactionWrapper\":\"Transactions_noTransactionWrapper__wWn6x\",\"noTransactionText\":\"Transactions_noTransactionText__ncH1P\",\"dropdown\":\"Transactions_dropdown__TA-WL\",\"options\":\"Transactions_options__100NG\",\"overlayAddIncome\":\"Transactions_overlayAddIncome__YfVME\",\"modalWrapper\":\"Transactions_modalWrapper__BOCR6\",\"select-container\":\"Transactions_select-container__5Hbmj\",\"select__control\":\"Transactions_select__control__xkbTq\",\"select__indicator\":\"Transactions_select__indicator__iPkZ3\",\"select__indicator-separator\":\"Transactions_select__indicator-separator__Ms4mF\",\"select__single-value\":\"Transactions_select__single-value__WzjYT\",\"select__placeholder\":\"Transactions_select__placeholder__8j-CQ\",\"select__value-container\":\"Transactions_select__value-container__iW+Ie\",\"select__menu\":\"Transactions_select__menu__X90wH\",\"select__option\":\"Transactions_select__option__nxnpj\",\"select__option--is-focused\":\"Transactions_select__option--is-focused__Sv2x+\",\"select__option--is-selected\":\"Transactions_select__option--is-selected__8f6jc\",\"labelForSelector\":\"Transactions_labelForSelector__RwlCT\",\"labelText\":\"Transactions_labelText__Vti7J\",\"flex\":\"Transactions_flex__8v7Ld\"};","import { createPortal } from 'react-dom';\nimport s from '../Transactions/Transactions.module.scss';\nimport Icon from 'components/Icon/Icon';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport c from '../../../../components/ModalAddIncome/MoadlAddIncome.module.scss';\nimport { useEffect, useState } from 'react';\nimport { categorySelect } from 'redux/Expenses/expensesSelectors';\nimport { updateTransaction } from 'redux/transactions/transactionsOperations';\nimport { IconOption } from 'components/TransactionSelect/iconsForSelectCategory';\nimport { getCategory } from 'redux/Expenses/expensesOperations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalTransaction = ({ closeModal, value, id }) => {\n  const [currentCategory, setCurrentCategory] = useState('Other');\n  const category = useSelector(categorySelect);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategory());\n  }, [dispatch]);\n\n  const transformCategory = category.map(({ name: value, title: label }) => ({\n    value,\n    label,\n  }));\n\n  const onChange = newValue => {\n    setCurrentCategory(newValue.value);\n  };\n\n  return createPortal(\n    <div className={s.overlayAddIncome}>\n      <div className={s.modalWrapper}>\n        <form className={s.formWrapper}>\n          <label className={s.labelForSelector}>\n            <p className={s.labelText}>Per category</p>\n            <Select\n              onChange={onChange}\n              value={value}\n              isSearchable={false}\n              placeholder={currentCategory}\n              className=\"select-container\"\n              classNamePrefix=\"select\"\n              options={transformCategory}\n              name=\"category\"\n              components={{ Option: IconOption }}\n            />\n\n            <div className={s.options}></div>\n          </label>\n          <div className={s.flex}>\n            <label className={s.formLabel}>\n              Expense comment\n              <input\n                className={s.formInput}\n                type=\"text\"\n                name=\"comment\"\n                maxLength=\"80\"\n              />\n            </label>\n\n            <label className={s.formLabel}>\n              Sum\n              <input className={s.formInput} type=\"text\" name=\"sum\" />\n            </label>\n\n            <div>\n              <button\n                className={s.buttonEdit}\n                type=\"submit\"\n                onClick={() => dispatch(updateTransaction(id))}\n              >\n                Edit\n              </button>\n            </div>\n            <button\n              className={s.buttonCloseModal}\n              type=\"button\"\n              onClick={closeModal}\n            >\n              <Icon\n                name=\"icon-close\"\n                width={24}\n                height={24}\n                secondaryClassName={c.iconClose}\n              />\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\nexport default ModalTransaction;\n","import TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport css from './Transactions.module.scss';\nimport ModalTransaction from '../ModalTransactions/ModalTransactions';\nimport {\n  removeTransaction,\n} from 'redux/transactions/transactionsOperations';\nimport { selectedTransactions } from 'redux/transactions/transactionsSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nconst Transactions = () => {\n  const leter = useSelector(selectedTransactions);\n  const [transaction, setTransaction] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTransaction(leter);\n  }, [leter]);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => setIsModalOpen(false);\n\n  const filterIt = id => {\n    const filteredTransaction = transaction.filter(el => el._id !== id);\n    setTransaction(filteredTransaction);\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <>\n      {transaction?.length === 0 && (\n        <div className={css.noTransactionWrapper}>\n          <p className={css.noTransactionText}>You have no transactions</p>\n        </div>\n      )}\n      <ul className={css.transactionList}>\n        {transaction &&\n          transaction.map(({ _id: id, sum, comment, category, date }) => (\n            <TransactionsItem\n              openModal={openModal}\n              key={id}\n              id={id}\n              sum={sum}\n              comment={comment}\n              category={category}\n              date={date}\n              filterIt={filterIt}\n            />\n          ))}\n      </ul>\n      {isModalOpen &&\n        transaction.map(({ _id: id }) => (\n          <ModalTransaction closeModal={closeModal} id={id} />\n        ))}\n    </>\n  );\n};\n\nexport default Transactions;\n","export const presavingSelect = state => state.expenses.presaving;\nexport const categorySelect = state => state.expenses.category;\nexport const selectorIsCashflowLoading = state => state.expenses.isLoading;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectedTransactions = state => state.statistics.transactions;\nexport const selectedCategoriesStat = state => state.statistics.categoriesStat;\nexport const selectedIsLoading = state => state.statistics.isLoading;\nexport const selectedError = state => state.statistics.error;\n\nexport const selectedChengedCategoriesStat = createSelector(\n  [selectedCategoriesStat],\n  categoriesStat => {\n    const totalSpend = categoriesStat.reduce(\n      (acc, item) => acc + item.amount,\n      0\n    );\n    const updatedCategoriesStat = categoriesStat.map(category => {\n      return {\n        ...category,\n        percentage: ((category.amount / totalSpend) * 100).toFixed(1),\n      };\n    });\n    return updatedCategoriesStat;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"MoadlAddIncome_overlayAddIncome__1P5D8\",\"modalWrapper\":\"MoadlAddIncome_modalWrapper__TwlUa\",\"modalAddIncome\":\"MoadlAddIncome_modalAddIncome__Od7vw\",\"modalInput\":\"MoadlAddIncome_modalInput__ZH85Z\",\"btnContainer\":\"MoadlAddIncome_btnContainer__ELtRK\",\"btnAdd\":\"MoadlAddIncome_btnAdd__dTtCU\",\"btnClose\":\"MoadlAddIncome_btnClose__nIubc\",\"btnSvg\":\"MoadlAddIncome_btnSvg__Q6jjo\",\"iconClose\":\"MoadlAddIncome_iconClose__owHnM\",\"categoryIcon\":\"MoadlAddIncome_categoryIcon__C4OJV\"};"],"names":["Option","components","IconOption","props","name","data","value","width","height","secondaryClassName","c","label","openModal","id","sum","date","category","comment","filterIt","className","s","moment","format","type","onClick","Icon","modalRoot","document","querySelector","closeModal","useState","currentCategory","setCurrentCategory","useSelector","categorySelect","dispatch","useDispatch","useEffect","getCategory","transformCategory","map","title","createPortal","onChange","newValue","isSearchable","placeholder","classNamePrefix","options","maxLength","updateTransaction","leter","selectedTransactions","transaction","setTransaction","isModalOpen","setIsModalOpen","filteredTransaction","filter","el","_id","removeTransaction","length","css","presavingSelect","state","expenses","presaving","selectorIsCashflowLoading","isLoading","statistics","transactions","selectedIsLoading","selectedChengedCategoriesStat","createSelector","categoriesStat","totalSpend","reduce","acc","item","amount","percentage","toFixed"],"sourceRoot":""}