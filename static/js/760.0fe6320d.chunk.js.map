{"version":3,"file":"static/js/760.0fe6320d.chunk.js","mappings":"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","sources":["components/TransactionSelect/iconsForSelectCategory.js","webpack://ITD-React-project/./src/pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.module.scss?9482","pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.jsx","webpack://ITD-React-project/./src/pages/StatisticsPage/TransactionsPage/Transactions/Transactions.module.scss?5055","pages/StatisticsPage/TransactionsPage/ModalTransactions/ModalTransactions.jsx","pages/StatisticsPage/TransactionsPage/Transactions/Transactions.jsx","redux/Expenses/expensesSelectors.js","redux/transactions/transactionsSelector.js","webpack://ITD-React-project/./src/components/ModalAddIncome/MoadlAddIncome.module.scss?e566"],"sourcesContent":["import { components } from 'react-select';\nimport Icon from '../Icon/Icon';\nimport c from '../ModalAddIncome/MoadlAddIncome.module.scss';\n\nconst { Option } = components;\n\nexport const IconOption = props => (\n  <Option {...props}>\n    <Icon\n      name={props.data.value}\n      width={18}\n      height={18}\n      secondaryClassName={c.categoryIcon}\n    />\n    {props.data.label}\n  </Option>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionItem\":\"TransactionsItem_transactionItem__I4efX\",\"commentWrapper\":\"TransactionsItem_commentWrapper__NOBZi\",\"transactionThumb\":\"TransactionsItem_transactionThumb__8EK3s\",\"thumb\":\"TransactionsItem_thumb__siEpA\",\"transactionDate\":\"TransactionsItem_transactionDate__i0qAD\",\"transactionComment\":\"TransactionsItem_transactionComment__otRnm\",\"transactionSum\":\"TransactionsItem_transactionSum__heA7p\",\"transactionCategory\":\"TransactionsItem_transactionCategory__udzxZ\",\"buttonThumb\":\"TransactionsItem_buttonThumb__g1kfu\",\"buttonItem\":\"TransactionsItem_buttonItem__xDui1\"};","import moment from 'moment';\nimport Icon from '../../../../components/Icon/Icon';\nimport s from './TransactionsItem.module.scss';\n\nconst TransactionsItem = ({\n  openModal,\n  updateTransaction,\n  id,\n  sum,\n  date,\n  category,\n  comment,\n  filterIt,\n}) => {\n  return (\n    <li\n      className={s.transactionItem}\n      key={id}\n      onClick={() => updateTransaction(id, date)}\n    >\n      <div className={s.transactionThumb}>\n        <div className={s.commentWrapper}>\n          <p className={s.transactionDate}>{moment(date).format('MM.YYYY')}</p>\n          <p className={s.transactionComment}>{comment}</p>\n        </div>\n\n        <div>\n          <p className={s.transactionSum}>{sum} â‚´</p>\n        </div>\n      </div>\n      <div className={s.thumb}>\n        <p className={s.transactionCategory}>{category}</p>\n        <div className={s.buttonThumb}>\n          <button className={s.buttonItem} type=\"button\" onClick={openModal}>\n            <Icon\n              name={'icon-pencil'}\n              width={'22'}\n              height={'22'}\n              className={'icon-pencil'}\n            />\n          </button>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            onClick={() => filterIt(id)}\n          >\n            <Icon\n              name={'icon-trash'}\n              width={'24'}\n              height={'24'}\n              className={'icon-trash'}\n            />\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionList\":\"Transactions_transactionList__76l1J\",\"formWrapper\":\"Transactions_formWrapper__jwN96\",\"formLabel\":\"Transactions_formLabel__k1ayP\",\"formInput\":\"Transactions_formInput__tc3pe\",\"buttonEdit\":\"Transactions_buttonEdit__vYe-K\",\"buttonCloseModal\":\"Transactions_buttonCloseModal__xCCdw\",\"noTransactionWrapper\":\"Transactions_noTransactionWrapper__wWn6x\",\"noTransactionText\":\"Transactions_noTransactionText__ncH1P\",\"dropdown\":\"Transactions_dropdown__TA-WL\",\"options\":\"Transactions_options__100NG\",\"overlayAddIncome\":\"Transactions_overlayAddIncome__YfVME\",\"modalWrapper\":\"Transactions_modalWrapper__BOCR6\",\"select-container\":\"Transactions_select-container__5Hbmj\",\"select__control\":\"Transactions_select__control__xkbTq\",\"select__indicator\":\"Transactions_select__indicator__iPkZ3\",\"select__indicator-separator\":\"Transactions_select__indicator-separator__Ms4mF\",\"select__single-value\":\"Transactions_select__single-value__WzjYT\",\"select__placeholder\":\"Transactions_select__placeholder__8j-CQ\",\"select__value-container\":\"Transactions_select__value-container__iW+Ie\",\"select__menu\":\"Transactions_select__menu__X90wH\",\"select__option\":\"Transactions_select__option__nxnpj\",\"select__option--is-focused\":\"Transactions_select__option--is-focused__Sv2x+\",\"select__option--is-selected\":\"Transactions_select__option--is-selected__8f6jc\",\"labelForSelector\":\"Transactions_labelForSelector__RwlCT\",\"labelText\":\"Transactions_labelText__Vti7J\",\"flex\":\"Transactions_flex__8v7Ld\",\"error\":\"Transactions_error__8eB8D\"};","import { createPortal } from 'react-dom';\nimport s from '../Transactions/Transactions.module.scss';\nimport Icon from 'components/Icon/Icon';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport c from '../../../../components/ModalAddIncome/MoadlAddIncome.module.scss';\nimport { useEffect, useState } from 'react';\nimport { categorySelect } from 'redux/Expenses/expensesSelectors';\nimport { updateTransaction } from 'redux/transactions/transactionsOperations';\nimport { IconOption } from 'components/TransactionSelect/iconsForSelectCategory';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { getCategory } from 'redux/Expenses/expensesOperations';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalTransaction = ({ closeModal, value, id }) => {\n  const [currentCategory, setCurrentCategory] = useState('Other');\n  const [currentSum] = useState(0);\n  const [currentComent] = useState('');\n  const category = useSelector(categorySelect);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategory());\n  }, [dispatch]);\n\n  const transformCategory = category.map(({ name: value, title: label }) => ({\n    value,\n    label,\n  }));\n\n  const onChange = newValue => {\n    setCurrentCategory(newValue.value);\n  };\n\n  return createPortal(\n    <div className={s.overlayAddIncome}>\n      <div className={s.modalWrapper}>\n        <Formik\n          initialValues={{\n            type: 'expense',\n            category: currentCategory,\n            comment: !currentComent ? 'no comment' : currentComent,\n            sum: Number(currentSum),\n          }}\n          validationSchema={Yup.object({\n            category: Yup.string().required('Required'),\n            comment: Yup.string()\n              .required('Required')\n              .min(4, 'Must be 4 characters or more')\n              .max(80, 'Must be 80 characters or less'),\n            sum: Yup.number().required('Required'),\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            dispatch(updateTransaction({ id, values }));\n            closeModal();\n            setSubmitting(false);\n          }}\n        >\n          {({ errors, touched, values }) => (\n            <Form className={s.formWrapper}>\n              <label className={s.labelForSelector}>\n                <p className={s.labelText}>Per category</p>\n                <Select\n                  onChange={onChange}\n                  value={value}\n                  isSearchable={false}\n                  placeholder={currentCategory}\n                  className=\"select-container\"\n                  classNamePrefix=\"select\"\n                  options={transformCategory}\n                  name=\"category\"\n                  components={{ Option: IconOption }}\n                />\n                <div className={s.options}></div>\n              </label>\n              <div className={s.flex}>\n                <label\n                  className={s.formLabel}\n                  style={{\n                    outline: `${\n                      touched.comment && errors.comment\n                        ? '1px solid red'\n                        : 'none'\n                    }`,\n                  }}\n                >\n                  Expense comment\n                  <Field\n                    className={s.formInput}\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder=\"Enter comment\"\n                  />\n                  {touched.comment && errors.comment && (\n                    <div className={s.error}>{errors.comment}</div>\n                  )}\n                </label>\n\n                <label\n                  className={s.formLabel}\n                  style={{\n                    outline: `${\n                      touched.sum && errors.sum\n                        ? '1px solid red'\n                        : 'none'\n                    }`,\n                  }}\n                >\n                  Sum\n                  <Field\n                    className={s.formInput}\n                    type=\"text\"\n                    name=\"sum\"\n                    placeholder=\"00.00\"\n                  />\n                  {touched.sum && errors.sum && (\n                    <div className={s.error}>{errors.sum}</div>\n                  )}\n                </label>\n\n                <div>\n                  <button className={s.buttonEdit} type=\"submit\">\n                    Edit\n                  </button>\n                </div>\n                <button\n                  className={s.buttonCloseModal}\n                  type=\"button\"\n                  onClick={closeModal}\n                >\n                  <Icon\n                    name=\"icon-close\"\n                    width={24}\n                    height={24}\n                    secondaryClassName={c.iconClose}\n                  />\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\nexport default ModalTransaction;\n","import TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport css from './Transactions.module.scss';\nimport ModalTransaction from '../ModalTransactions/ModalTransactions';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\nimport { selectedTransactions } from 'redux/transactions/transactionsSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nconst Transactions = () => {\n  const leter = useSelector(selectedTransactions);\n  const [transaction, setTransaction] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [idTransaction, setIdTransaction] = useState('');\n  const [idDate, setIdDate] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTransaction(leter);\n  }, [leter]);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const updateTransaction = (id, date) => {\n    setIdTransaction(id);\n    setIdDate(date);\n  };\n  const closeModal = () => setIsModalOpen(false);\n\n  const filterIt = id => {\n    const filteredTransaction = transaction.filter(el => el._id !== id);\n    setTransaction(filteredTransaction);\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <>\n      {transaction?.length === 0 && (\n        <div className={css.noTransactionWrapper}>\n          <p className={css.noTransactionText}>You have no transactions</p>\n        </div>\n      )}\n      <ul className={css.transactionList}>\n        {transaction &&\n          transaction.map(({ _id: id, sum, comment, category, date }) => (\n            <TransactionsItem\n              key={id}\n              openModal={openModal}\n              updateTransaction={() => updateTransaction(id)}\n              id={id}\n              sum={sum}\n              comment={comment}\n              category={category}\n              date={date}\n              filterIt={filterIt}\n            />\n          ))}\n      </ul>\n      {isModalOpen && (\n        <ModalTransaction\n          closeModal={closeModal}\n          id={idTransaction}\n          date={idDate}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Transactions;\n","export const presavingSelect = state => state.expenses.presaving;\nexport const categorySelect = state => state.expenses.category;\nexport const selectorIsCashflowLoading = state => state.expenses.isLoading;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectedTransactions = state => state.statistics.transactions;\nexport const selectedCategoriesStat = state => state.statistics.categoriesStat;\nexport const selectedIsLoading = state => state.statistics.isLoading;\nexport const selectedError = state => state.statistics.error;\n\nexport const selectedChengedCategoriesStat = createSelector(\n  [selectedCategoriesStat],\n  categoriesStat => {\n    const totalSpend = categoriesStat.reduce(\n      (acc, item) => acc + item.amount,\n      0\n    );\n    const updatedCategoriesStat = categoriesStat.map(category => {\n      return {\n        ...category,\n        percentage: ((category.amount / totalSpend) * 100).toFixed(1),\n      };\n    });\n    return updatedCategoriesStat;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"MoadlAddIncome_overlayAddIncome__1P5D8\",\"modalWrapper\":\"MoadlAddIncome_modalWrapper__TwlUa\",\"modalAddIncome\":\"MoadlAddIncome_modalAddIncome__Od7vw\",\"modalInput\":\"MoadlAddIncome_modalInput__ZH85Z\",\"btnContainer\":\"MoadlAddIncome_btnContainer__ELtRK\",\"btnAdd\":\"MoadlAddIncome_btnAdd__dTtCU\",\"btnClose\":\"MoadlAddIncome_btnClose__nIubc\",\"btnSvg\":\"MoadlAddIncome_btnSvg__Q6jjo\",\"iconClose\":\"MoadlAddIncome_iconClose__owHnM\",\"categoryIcon\":\"MoadlAddIncome_categoryIcon__C4OJV\"};"],"names":["Option","components","IconOption","props","name","data","value","width","height","secondaryClassName","c","label","openModal","updateTransaction","id","sum","date","category","comment","filterIt","className","s","onClick","moment","format","type","Icon","modalRoot","document","querySelector","closeModal","useState","currentCategory","setCurrentCategory","currentSum","currentComent","useSelector","categorySelect","dispatch","useDispatch","useEffect","getCategory","transformCategory","map","title","onChange","newValue","createPortal","initialValues","Number","validationSchema","Yup","required","min","max","onSubmit","values","setSubmitting","errors","touched","isSearchable","placeholder","classNamePrefix","options","style","outline","leter","selectedTransactions","transaction","setTransaction","isModalOpen","setIsModalOpen","idTransaction","setIdTransaction","idDate","setIdDate","filteredTransaction","filter","el","_id","removeTransaction","length","css","presavingSelect","state","expenses","presaving","selectorIsCashflowLoading","isLoading","statistics","transactions","selectedIsLoading","selectedChengedCategoriesStat","createSelector","categoriesStat","totalSpend","reduce","acc","item","amount","percentage","toFixed"],"sourceRoot":""}