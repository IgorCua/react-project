{"version":3,"file":"static/js/763.aa09766c.chunk.js","mappings":"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","sources":["webpack://ITD-React-project/./src/components/Section/Section.module.scss?893f","components/Section/Section.jsx","components/TransactionSelect/iconsForSelectCategory.js","webpack://ITD-React-project/./src/components/TransactionDataList/TransactionDataList.module.scss?a67d","components/TransactionDataList/TransactionInput.jsx","webpack://ITD-React-project/./src/components/ExpensesLimits/ExpensesLimits.module.scss?dfa4","components/ExpensesLimits/ExpensesLimits.jsx","components/ModalAddIncome/ModalAddIncome.jsx","components/TransactionSelect/TransactionSelect.jsx","components/TransactionDataList/TransactionDataList.jsx","pages/ExpensesPage/ExpensesPage.jsx","redux/Expenses/expensesSelectors.js","webpack://ITD-React-project/./src/components/ModalAddIncome/MoadlAddIncome.module.scss?e566"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"vectorImg\":\"Section_vectorImg__zw3S9\"};","import s from './Section.module.scss';\n\nconst Section = ({ children }) => {\n  return <section className={s.vectorImg}>{children}</section>;\n};\n\nexport default Section;\n","import { components } from 'react-select';\nimport Icon from '../Icon/Icon';\nimport c from '../ModalAddIncome/MoadlAddIncome.module.scss';\n\nconst { Option } = components;\n\nexport const IconOption = props => (\n  <Option {...props}>\n    <Icon\n      name={props.data.value}\n      width={18}\n      height={18}\n      secondaryClassName={c.categoryIcon}\n    />\n    {props.data.label}\n  </Option>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TransactionDataList_form__PQet4\",\"lable\":\"TransactionDataList_lable__tgMqy\",\"input\":\"TransactionDataList_input__UYAuz\",\"inputTitle\":\"TransactionDataList_inputTitle__ZMOet\",\"option\":\"TransactionDataList_option__LxNdt\",\"inputWrapper\":\"TransactionDataList_inputWrapper__NCwBF\",\"errorSpan\":\"TransactionDataList_errorSpan__qwVwx\"};","import { Field } from 'formik';\nimport s from './TransactionDataList.module.scss';\n\nconst Input = ({ name, title, placeholder, disabled }) => {\n  return (\n    <label htmlFor={name} className={s.lable}>\n      <p className={s.inputTitle}>{title}</p>\n      <Field\n        className={s.input}\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"expenses\":\"ExpensesLimits_expenses__aXlAh\",\"expensesWrapper\":\"ExpensesLimits_expensesWrapper__pVgmK\",\"list\":\"ExpensesLimits_list__P7L9Z\",\"item\":\"ExpensesLimits_item__z3Vxk\",\"sum\":\"ExpensesLimits_sum__2nfRD\",\"text\":\"ExpensesLimits_text__5Gmts\",\"buttonWrapper\":\"ExpensesLimits_buttonWrapper__Wr4Em\",\"buttonReady\":\"ExpensesLimits_buttonReady__uKK-W\",\"btnModal\":\"ExpensesLimits_btnModal__Ev4l8\"};","import { useSelector } from 'react-redux';\nimport s from './ExpensesLimits.module.scss';\nimport { presavingSelect } from 'redux/Expenses/expensesSelectors';\n\nconst ExpensesLimits = ({ openModal }) => {\n  const { dailyLimit, monthLimit, totalByDay, totalByMounth } =\n    useSelector(presavingSelect);\n\n  const numberWithSpaces = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n  return (\n    <div className={s.expenses}>\n      <div className={s.expensesWrapper}>\n        <ul className={s.list}>\n          <li className={s.item}>\n            <p className={s.sum}>\n              {numberWithSpaces(Math.round(dailyLimit - totalByDay))} ₴\n            </p>\n            <p className={s.text}>Daily limit</p>\n          </li>\n          <li className={s.item}>\n            <p className={s.sum}>\n              {numberWithSpaces(Math.round(monthLimit - totalByMounth))} ₴\n            </p>\n            <p className={s.text}>Monthly limit</p>\n          </li>\n        </ul>\n        <div className={s.buttonWrapper}>\n          <button className={s.buttonReady} type=\"submit\">\n            Ready\n          </button>\n          <button className={s.btnModal} type=\"button\" onClick={openModal}>\n            Add income\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesLimits;\n","import Icon from 'components/Icon/Icon';\nimport s from './MoadlAddIncome.module.scss';\nimport { createPortal } from 'react-dom';\nimport { Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { postTransaction } from 'redux/Expenses/expensesOperations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst MoadlAddIncome = ({ closeModal, text }) => {\n  const dispatch = useDispatch();\n  const initialValue = {\n    sum: '',\n  };\n  const handleSubmit = (values, actions) => {\n    dispatch(postTransaction({ sum: values.sum, type: 'income' }));\n    console.log(values);\n    actions.resetForm();\n    closeModal();\n  };\n\n  return createPortal(\n    <div className={s.overlayAddIncome}>\n      <div className={s.modalWrapper}>\n        <Formik onSubmit={handleSubmit} initialValues={initialValue}>\n          <Form className={s.modalAddIncome}>\n            <Field\n              className={s.modalInput}\n              type=\"text\"\n              name=\"sum\"\n              placeholder={text}\n            />\n\n            <div className={s.btnContainer}>\n              <button className={s.btnAdd} type=\"submit\">\n                Add\n              </button>\n              <button className={s.btnClose} type=\"button\" onClick={closeModal}>\n                Cancel\n              </button>\n            </div>\n          </Form>\n        </Formik>\n        <button className={s.btnSvg} onClick={closeModal}>\n          <Icon\n            name=\"icon-close\"\n            width={24}\n            height={24}\n            secondaryClassName={s.iconClose}\n          />\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default MoadlAddIncome;\n","import Select from 'react-select';\nimport { IconOption } from './iconsForSelectCategory';\n\nconst TransactionSelect = ({ transformCategory, onChange, value }) => {\n  return (\n    <label className=\"labelForSelector\">\n      <p className=\"labelText\">Per category</p>\n      <Select\n        onChange={onChange}\n        value={value}\n        isSearchable={false}\n        placeholder=\"Choose category\"\n        className=\"select-container\"\n        classNamePrefix=\"select\"\n        options={transformCategory}\n        name=\"category\"\n        components={{ Option: IconOption }}\n      />\n    </label>\n  );\n};\n\nexport default TransactionSelect;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport Input from './TransactionInput';\nimport ExpensesLimits from '../ExpensesLimits/ExpensesLimits';\nimport ModalAddIncome from '../ModalAddIncome/ModalAddIncome';\nimport { selectorBalance } from 'redux/auth/authSelectors';\n\nimport { postTransaction } from 'redux/Expenses/expensesOperations';\nimport TransactionSelect from '../TransactionSelect/TransactionSelect';\nimport s from './TransactionDataList.module.scss';\n\nimport {\n  categorySelect,\n  selectorIsCashflowLoading,\n} from 'redux/Expenses/expensesSelectors';\nimport Loader from 'components/Loader/Loader';\n\nconst initialValues = {\n  comment: '',\n  sum: '',\n  category: '',\n};\n\nconst schema = yup.object().shape({\n  comment: yup.string().max(80),\n  sum: yup\n    .number()\n    .positive('enter only a positive number')\n    .required('This field is required'),\n  category: yup.string(),\n});\n\nconst TransactionDataList = () => {\n  const [currentCategory, setCurrentCategory] = useState('other');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const isLoading = useSelector(selectorIsCashflowLoading);\n  const category = useSelector(categorySelect);\n  const balance = useSelector(selectorBalance);\n  const dispatch = useDispatch();\n\n  const transformCategory = category.map(({ name: value, title: label }) => ({\n    value,\n    label,\n  }));\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => setIsModalOpen(false);\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      postTransaction({\n        ...values,\n        comment: !values.comment ? 'no comment' : values.comment,\n        sum: Number(values.sum),\n        category: currentCategory,\n        type: 'expense',\n      })\n    );\n\n    actions.resetForm();\n  };\n\n  const getValue = () => {\n    return currentCategory\n      ? transformCategory.find(c => c.value === currentCategory)\n      : '';\n  };\n\n  const onChange = newValue => {\n    setCurrentCategory(newValue.value);\n  };\n\n  const numberWithSpaces = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <div className={s.form}>\n            <div className={s.inputWrapper}>\n              <Input\n                name=\"balance\"\n                title=\"From account\"\n                placeholder={`Account balance: ₴ ${numberWithSpaces(\n                  Math.round(balance)\n                )} `}\n                disabled={true}\n              />\n            </div>\n\n            <div className={s.inputWrapper}>\n              <TransactionSelect\n                onChange={onChange}\n                value={getValue()}\n                transformCategory={transformCategory}\n              />\n            </div>\n\n            <div className={s.inputWrapper}>\n              <Input\n                name=\"comment\"\n                title=\"Expense comment\"\n                placeholder=\"Enter comment\"\n              />\n              <ErrorMessage name=\"comment\">\n                {msg => <span className={s.errorSpan}>{msg}</span>}\n              </ErrorMessage>\n            </div>\n\n            <div className={s.inputWrapper}>\n              <Input name=\"sum\" title=\"Sum\" placeholder=\"00.00\" />\n              <ErrorMessage name=\"sum\">\n                {msg => <span className={s.errorSpan}>{msg}</span>}\n              </ErrorMessage>\n            </div>\n          </div>\n\n          <ExpensesLimits openModal={openModal} />\n        </Form>\n      </Formik>\n      {isModalOpen && (\n        <ModalAddIncome text=\"Enter income\" closeModal={closeModal} />\n      )}\n    </div>\n  );\n};\n\nexport default TransactionDataList;\n","import Container from 'components/Container/Container';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { getCategory, getPresaving } from 'redux/Expenses/expensesOperations';\nimport { getCategory, getPresaving } from 'redux/Expenses/expensesOperations';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport TransactionDataList from 'components/TransactionDataList/TransactionDataList';\nimport Section from 'components/Section/Section';\n\nconst ExpensesPage = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  useEffect(() => {\n    isLoggedIn && dispatch(getCategory());\n    isLoggedIn && dispatch(getPresaving());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <Section>\n      <Container>\n        <TransactionDataList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default ExpensesPage;\n","export const presavingSelect = state => state.expenses.presaving;\nexport const categorySelect = state => state.expenses.category;\nexport const selectorIsCashflowLoading = state => state.expenses.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"MoadlAddIncome_overlayAddIncome__1P5D8\",\"modalWrapper\":\"MoadlAddIncome_modalWrapper__TwlUa\",\"modalAddIncome\":\"MoadlAddIncome_modalAddIncome__Od7vw\",\"modalInput\":\"MoadlAddIncome_modalInput__ZH85Z\",\"btnContainer\":\"MoadlAddIncome_btnContainer__ELtRK\",\"btnAdd\":\"MoadlAddIncome_btnAdd__dTtCU\",\"btnClose\":\"MoadlAddIncome_btnClose__nIubc\",\"btnSvg\":\"MoadlAddIncome_btnSvg__Q6jjo\",\"iconClose\":\"MoadlAddIncome_iconClose__owHnM\",\"categoryIcon\":\"MoadlAddIncome_categoryIcon__C4OJV\"};"],"names":["children","className","s","Option","components","IconOption","props","name","data","value","width","height","secondaryClassName","c","label","title","placeholder","disabled","htmlFor","type","openModal","useSelector","presavingSelect","dailyLimit","monthLimit","totalByDay","totalByMounth","numberWithSpaces","x","toString","replace","Math","round","onClick","modalRoot","document","querySelector","closeModal","text","dispatch","useDispatch","createPortal","onSubmit","values","actions","postTransaction","sum","console","log","resetForm","initialValues","Icon","transformCategory","onChange","isSearchable","classNamePrefix","options","comment","category","schema","yup","shape","max","positive","required","useState","currentCategory","setCurrentCategory","isModalOpen","setIsModalOpen","isLoading","selectorIsCashflowLoading","categorySelect","balance","selectorBalance","map","Loader","Number","validationSchema","autoComplete","newValue","find","msg","ModalAddIncome","isLoggedIn","selectorIsLoggedIn","useEffect","getCategory","getPresaving","Section","Container","state","expenses","presaving"],"sourceRoot":""}