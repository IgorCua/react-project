{"version":3,"file":"static/js/734.822f07c9.chunk.js","mappings":"0MACA,GAAgB,uBAAyB,sCAAsC,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,wBAAwB,eAAiB,8BAA8B,OAAS,sBAAsB,SAAW,wBAAwB,aAAe,4BAA4B,UAAY,yBAAyB,QAAU,wBCDxWA,EAAe,CACxBC,UAAU,CACRC,OAAQ,GAEVC,qBAAqB,EACrBC,mBAAoB,IACpBC,cAAe,GAEfC,UAAW,IAEXC,aAAc,EACdC,SAAU,CACRC,IAAK,CACHC,YAAa,IAMjBC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNC,SAAS,EAETC,OAAQ,CAENC,KAAM,CACFC,KAAM,MAIdC,MAAO,CACLJ,SAAS,IAGbK,OAAO,CACLC,QAAS,CACPC,KAAM,KAGVC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,KAAM,CACJX,SAAS,EAETY,YAAa,QACbhB,YAAa,GAGfiB,OAAQ,CACNb,SAAS,GAEXc,MAAO,CACLC,MAAO,UACPT,QAAS,EACTU,gBAAiB,EACjBd,KAAM,CACJC,KAAM,KAGVc,UAAW,CACTC,eAAgB,IAEnBC,SAAS,CACRV,GAAI,MAGNW,EAAG,CACDT,KAAM,CAEJI,MAAO,2BACPM,QAAQ,EAKRC,WAAY,GACZC,eAAgB,CAAC,EAAG,KAKtBV,OAAO,CACLb,SAAS,EACTwB,KAAM,CAAC,EAAG,KAIZV,MAAO,CACLC,MAAO,WAGTI,SAAU,QAKdlB,OAAQ,CACNwB,UAAW,YAIFC,EAAgB,CAC3BvC,UAAU,CACRC,OAAQ,GAEVC,qBAAqB,EACrBC,mBAAoB,IACpBC,cAAe,GAEfC,UAAW,IAEXC,aAAc,EACdC,SAAU,CACRC,IAAK,CACHC,YAAa,IAMjBC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNC,SAAS,EAETC,OAAQ,CAENC,KAAM,CACFC,KAAM,MAIdC,MAAO,CACLJ,SAAS,IAGbK,OAAO,CACLC,QAAS,CACPC,KAAM,IAGVC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,KAAM,CACJX,SAAS,EACTqB,QAAQ,EAIRN,MAAO,2BACPO,WAAY,GACZC,eAAgB,CAAC,EAAG,KAEtBV,OAAQ,CACNb,SAAS,EACTwB,KAAM,CAAC,EAAG,KAEZV,MAAO,CACLC,MAAO,UAEPC,gBAAiB,EACjBd,KAAM,CACJC,KAAM,GACNwB,OAAQ,OACRC,OAAQ,MAGZX,UAAW,CACTC,eAAgB,KAMpBE,EAAG,CACDT,KAAM,CACJX,SAAS,EACTe,MAAO,2BACPM,QAAQ,EAKRC,WAAY,IAMdT,OAAO,CACLb,SAAS,EACTwB,KAAM,CAAC,EAAG,KAIZV,MAAO,CACLC,MAAO,UAGPb,KAAM,CACJC,KAAM,GACNwB,OAAQ,OACRC,OAAQ,S,8BC3MPC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EACtBC,EAAmB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,UAAnB,EAGxBC,EAAwB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,eAAnB,EAC7BC,EAAuB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,cAAnB,EAE5BC,EAAc,SAAAR,GAAK,OAAIA,EAAMC,SAASQ,KAAnB,EACnBC,EAAqB,SAAAV,GAAK,OAAIA,EAAMC,SAASU,iBAAnB,EAC1BC,EAAa,SAAAZ,GAAK,OAAIA,EAAMC,SAASY,IAAnB,EAIlBC,GAA2BC,EAAAA,EAAAA,IACtC,CAACT,EAJsC,SAAAN,GAAK,OAAIA,EAAMgB,QAAQC,KAAKC,OAAvB,EACR,SAAAlB,GAAK,OAAIA,EAAMgB,QAAQC,KAAKE,IAAvB,IAIzC,SAACZ,EAAgBW,EAASC,GACxB,IAAMC,EAAqBD,EAAOD,EAC5BG,EACJD,EAAqBb,EACjBa,EAAqBb,EACrBa,EAAsBb,EAAiBa,EAE7C,OAA4B,IAArBC,EAAyBD,EAAqBC,CACtD,I,oBCpBUlD,EAAS,CACpB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,O,GAWUA,EAAOmD,KAAI,kBAAM,GAAN,IAMXnD,EAAOmD,KAAI,kBAAM,GAAN,IAMXnD,EAAOmD,KAAI,kBAAM,GAAN,I,QChBvBC,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,GAAQC,EAAAA,GAC5CC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAIK,IAAMC,EAAQ,WAEnB,IAAMC,GAAgBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBACvCC,GAAWC,EAAAA,EAAAA,MAGXC,IADWC,EAAAA,EAAAA,IAAYvC,IACZwC,EAAAA,EAAAA,QAAO,OAClBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,GACzBtC,GAAamC,EAAAA,EAAAA,IAAYpC,IAK/BwC,EAAAA,EAAAA,YAAU,WACJF,GAEFL,GAASQ,EAAAA,EAAAA,MAGZ,GAAE,CAACR,EAAUK,IAEd,IAAMI,EAAO,CACXzE,OAAAA,EACA0E,SAAU,CACR,CAGED,KAAMzE,EAAOmD,KAAI,SAACwB,EAAGC,GAAJ,eAAU,UAAA5C,EAAW4C,UAAX,eAAeC,SAAf,UAAwB7C,EAAW4C,UAAnC,aAAwB,EAAeE,QAAjD,IAEjBC,gBAAiB,WAEnB,CAEEN,KAAMzE,EAAOmD,KAAI,SAACwB,EAAGC,GAAJ,uBAAU5C,EAAW4C,UAArB,aAAU,EAAeE,OAAzB,IAGjBC,gBAAiB,WAEnB,CAEEN,KAAMzE,EAAOmD,KAAI,SAACwB,EAAGC,GAAJ,uBAAU5C,EAAW4C,UAArB,aAAU,EAAeC,MAAzB,IAGjBE,gBAAiB,aAKvB,OACE,iBAAKC,UAAWC,EAAAA,uBAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,+CACA,gBAAID,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,SAAf,0BACA,eAAID,UAAWC,EAAAA,SAAf,uBACA,eAAID,UAAWC,EAAAA,SAAf,uBAIDpB,GACC,gBAAKmB,UAAWC,EAAAA,eAAhB,UACE,SAAC,KAAD,CAAKC,IAAKhB,EAAUiB,QAAS1D,EAAegD,KAAMA,EAAMW,OAAQ,OAAQC,MAAO,YAGjF,iCACE,kCACA,gBAAKL,UAAWC,EAAAA,eAAhB,UACE,SAAC,KAAD,CAAKC,IAAKhB,EAAUiB,QAASlG,EAAcwF,KAAMA,EAAMW,OAAQ,OAAQC,MAAO,eAWpF,iBAAKL,UAAWC,EAAAA,cAAhB,WACE,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,2CAEF,gBAAID,UAAWC,EAAAA,SAAf,WACE,gBAAID,UAAWC,EAAAA,aAAf,WACE,cAAGD,UAAWC,EAAAA,UAAd,6BACA,cAAGD,UAAWC,EAAAA,QAAd,wBAEF,gBAAID,UAAWC,EAAAA,aAAf,WACE,cAAGD,UAAWC,EAAAA,UAAd,+BACA,cAAGD,UAAWC,EAAAA,QAAd,wBAEF,gBAAID,UAAWC,EAAAA,aAAf,WACE,cAAGD,UAAWC,EAAAA,UAAd,kCACA,cAAGD,UAAWC,EAAAA,QAAd,wBAEF,gBAAID,UAAWC,EAAAA,aAAf,WACE,cAAGD,UAAWC,EAAAA,UAAd,2BACA,cAAGD,UAAWC,EAAAA,QAAd,wBAEF,gBAAID,UAAWC,EAAAA,aAAf,WACE,cAAGD,UAAWC,EAAAA,UAAd,sBACA,cAAGD,UAAWC,EAAAA,QAAd,+BAMX,E,oBCtID,GAAgB,cAAgB,4BAA4B,MAAQ,oBAAoB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,SAAW,uBAAuB,IAAM,kBAAkB,QAAU,sBAAsB,eAAiB,6BAA6B,UAAY,wBAAwB,kBAAoB,gCAAgC,SAAW,uBAAuB,QAAU,sBAAsB,OAAS,qBAAqB,aAAe,4B,oBCCtgB,SAASK,EAAeC,GAC3B,IAG2BL,EAHrBM,GAAapB,EAAAA,EAAAA,QAAO,MACrBqB,EAAuBF,EAAvBE,QAASC,EAAcH,EAAdG,WAsBd,OApB2BR,EAcTM,GAbdjB,EAAAA,EAAAA,YAAU,WACR,SAASoB,EAAmBC,GACtBV,EAAIW,UAAYX,EAAIW,QAAQC,SAASF,EAAMG,SAC3CL,EAAWD,GAAU,EAE1B,CAED,OADAO,SAASC,iBAAiB,YAAaN,GAChC,WACLK,SAASE,oBAAoB,YAAaP,EAC3C,CACF,GAAE,CAACT,KAKRX,EAAAA,EAAAA,YAAU,WAET,GAAC,CAACkB,KAEI,gBAAKP,IAAKM,EAAV,SAAuBD,EAAMY,UACvC,CCND,IAAMC,EAAY,CACdf,MAAO,OACPD,OAAQ,OAERrF,QAAS,OACTsG,cAAe,SACfC,WAAY,SACZjG,QAAS,OACTV,YAAa,EACbH,aAAc,GACdmB,YAAa,2BACb4F,YAAa,SACbxB,gBAAiB,2BACjBjE,MAAO,UACP0F,QAAS,OACTC,WAAY,2BAGHC,EAAO,SAACnB,GAGjB,IAAMrD,GAAkBiC,EAAAA,EAAAA,IAAYlC,GAC9BG,GAAiB+B,EAAAA,EAAAA,IAAYhC,GAE7BG,GAAQ6B,EAAAA,EAAAA,IAAY9B,GACpBsE,GAAexC,EAAAA,EAAAA,IAAY5B,GAC3BG,GAAOyB,EAAAA,EAAAA,IAAY1B,GACnBK,GAAOqB,EAAAA,EAAAA,IAAYyC,EAAAA,IACnB1D,GAAmBiB,EAAAA,EAAAA,IAAYxB,GACrC,GAIIkE,EAAAA,EAAAA,IAAY,CACZC,OAAQ,CACN,aAAc,GACd,YAAa,MANfC,EADJ,EACIA,cACAC,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,cASJ,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAKzB,EAAL,KAAcC,EAAd,KACM1B,GAAWC,EAAAA,EAAAA,MACXkD,EAAOJ,GAEbxC,EAAAA,EAAAA,YAAU,WAIN,GAAG4C,EAAKC,OAAS,EAAG,CAChBC,QAAQC,IAAI,YAAaP,GAGzB,IAAMQ,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASV,EAAc,IAEvCM,QAAQC,IAAI,YAAYC,GACxBvD,GAAS0D,EAAAA,EAAAA,IAAUH,GACtB,CACJ,GAAC,CAACR,EAAeI,EAAKC,OAAQpD,EAAUyB,IAEzC,IAAMR,GAAQ0C,EAAAA,EAAAA,UAAQ,4BACfvB,EADe,GAKnB,IAWH,OACE,iCACE,iBAAKpB,UAAW4C,EAAAA,cAAhB,WACE,iBAAK5C,UAAW4C,EAAAA,YAAhB,WACE,eAAG5C,UAAW4C,EAAAA,MAAd,mBACSlF,EADT,UACsBJ,EADtB,aAGA,gBAAI0C,UAAW4C,EAAAA,KAAf,WACE,gBAAI5C,UAAW4C,EAAAA,KAAf,WACE,cAAG5C,UAAW4C,EAAAA,KAAd,8BACA,cAAG5C,UAAW4C,EAAAA,IAAd,SAA2B1F,QAE7B,gBAAI8C,UAAW4C,EAAAA,KAAf,WACE,cAAG5C,UAAW4C,EAAAA,KAAd,gCACA,eAAG5C,UAAW4C,EAAAA,IAAd,UAA2BxF,EAA3B,iBAEF,gBAAI4C,UAAW4C,EAAAA,KAAf,WACE,cAAG5C,UAAW4C,EAAAA,KAAd,wBACA,eAAG5C,UAAW4C,EAAAA,IAAd,UAA2BjB,EAA3B,kBAIJ,eAAG3B,UAAW4C,EAAAA,SAAd,UACGjB,EADH,WACyB7D,EAAKC,QAD9B,wBAGA,gBAAKiC,UAAW4C,EAAAA,IAAhB,UACE,gBACE5C,UAAW4C,EAAAA,QACX3C,MAAO,CAAEI,MA/BX,GAAN,OAAWsB,EAAe7D,EAAKC,QAAU,IAAzC,cAmCE,SAACuC,EAAD,CAAgBG,QAASA,EAASC,WAAYA,EAA9C,SACGD,GACC,gBACET,UAAW4C,EAAAA,eACXC,QAAS,kBAAMnC,GAAW,EAAjB,EAFX,UAIE,oCAGF,gBAAKV,UAAW4C,EAAAA,eAAhB,UACE,mCAASZ,EAAa,CAAE/B,MAAAA,KAAxB,eACE,4BAAWgC,OACX,oFACA,wFAMV,iBAAKjC,UAAW4C,EAAAA,UAAhB,WACE,iBAAK5C,UAAW4C,EAAAA,kBAAhB,WACE,eAAG5C,UAAW4C,EAAAA,SAAd,0BACc,iBAAM5C,UAAW4C,EAAAA,QAAjB,oBADd,8CAIA,eAAG5C,UAAW4C,EAAAA,OAAd,UACGE,KAAKC,MAAM7E,GADd,iBAIF,gBAAK8B,UAAW4C,EAAAA,oBAIzB,EClKD,EAA0B,8BCU1B,EAPqB,WACnB,OAAO,qBAAS5C,UAAWC,EAApB,WACL,SAACrB,EAAD,KACA,SAAC8C,EAAD,MAEH,C","sources":["webpack://ITD-React-project/./src/components/Dynamics/Chart.module.scss?52aa","services/dynamics/chartOptions.js","redux/dynamics/dynamicsVariables.js","services/dynamics/chartData.js","components/Dynamics/Chart.jsx","webpack://ITD-React-project/./src/components/Dynamics/Info.module.scss?4537","components/Dynamics/OutsideKlicker.jsx","components/Dynamics/Info.jsx","webpack://ITD-React-project/./src/pages/DynamicsPage/DynamicsPage.module.scss?258c","pages/DynamicsPage/DynamicsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dynamicsChartContainer\":\"Chart_dynamicsChartContainer__l5JKW\",\"title\":\"Chart_title__eAN-E\",\"list\":\"Chart_list__C+uqb\",\"listItem\":\"Chart_listItem__dTZyR\",\"chartContainer\":\"Chart_chartContainer__AKMWK\",\"select\":\"Chart_select__VD3be\",\"statList\":\"Chart_statList__YMJpy\",\"statListItem\":\"Chart_statListItem__4USfE\",\"itemTitle\":\"Chart_itemTitle__1AXCy\",\"itemNum\":\"Chart_itemNum__1A-8B\"};","export const optionsPhone = {\n    chartArea:{\n      bottom: 5\n    },\n    maintainAspectRatio: false,\n    categoryPercentage: 0.75,\n    barPercentage: 0.5,\n    // barValueSpacing: 10,\n    indexAxis: 'y',\n    // barThickness: 8,\n    borderRadius: 6,\n    elements: {\n      bar: {\n        borderWidth: 0,\n        // categoryPercentage: 0.1,\n        // barPercentage: 0.9,\n        // width: 1000\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n        // position: 'top',\n        labels: {\n          // This more specific font property overrides the global property\n          font: {\n              size: 16,\n          },\n      }\n      },\n      title: {\n        display: false,\n      },\n    },\n    layout:{\n      padding: {\n        left: 40\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          display: false,\n          // drawBorder: false,\n          borderColor: 'white',\n          borderWidth: 2,\n          // color: 'rgba(243, 243, 243, 0.2)'\n        },\n        border: {\n          display: false,\n        },\n        ticks: {\n          color: '#F3F3F3',\n          padding: 0,\n          backdropPadding: 0,\n          font: {\n            size: 12,\n          },\n        },\n        gridLines: {\n          tickMarkLength: 10\n       },\n       position:{\n        y: -0.75\n       }\n      },\n      x: {\n        grid: {\n          // display: false,\n          color: 'rgba(243, 243, 243, 0.2)',\n          offset: false,\n          // tickColor: 'white'\n\n          // borderColor: 'white',\n          // borderWidth: 2,\n          tickLength: 13,\n          tickBorderDash: [3, 10],\n          // tickBorderDashOffset: 50,\n\n          // drawBorder: false,\n        },\n        border:{\n          display: false,\n          dash: [8, 10],\n          \n          // borderColor: 'white',\n        },\n        ticks: {\n          color: '#F3F3F3',\n          // padding: 10\n        },\n        position: 'top',\n        // tickBorderDashOffset: 1\n\n      }\n    },\n    labels: {\n      fontColor: '#F3F3F3'\n    },\n  };\n\n  export const optionsTablet = {\n    chartArea:{\n      bottom: 5\n    },\n    maintainAspectRatio: false,\n    categoryPercentage: 0.75,\n    barPercentage: 0.5,\n    // barValueSpacing: 10,\n    indexAxis: 'x',\n    // barThickness: 8,\n    borderRadius: 6,\n    elements: {\n      bar: {\n        borderWidth: 0,\n        // categoryPercentage: 0.1,\n        // barPercentage: 0.9,\n        // width: 1000\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n        // position: 'top',\n        labels: {\n          // This more specific font property overrides the global property\n          font: {\n              size: 16,\n          },\n      }\n      },\n      title: {\n        display: false,\n      },\n    },\n    layout:{\n      padding: {\n        left: 0\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          display: true,\n          offset: false,\n          // drawBorder: false,\n          // borderColor: 'white',\n          // borderWidth: 2,\n          color: 'rgba(243, 243, 243, 0.2)',\n          tickLength: 10,\n          tickBorderDash: [3, 10],\n        },\n        border: {\n          display: true,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n          // padding: 3,\n          backdropPadding: 0,\n          font: {\n            size: 12,\n            family: 'Lato',\n            weight: 400,\n          },\n        },\n        gridLines: {\n          tickMarkLength: 10\n        },\n      //  position:{\n      //   x: 1\n      //  }\n      },\n      x: {\n        grid: {\n          display: false,\n          color: 'rgba(243, 243, 243, 0.2)',\n          offset: false,\n          // tickColor: 'white'\n\n          // borderColor: 'white',\n          // borderWidth: 2,\n          tickLength: 10,\n          // tickBorderDash: [3, 10],\n          // tickBorderDashOffset: 50,\n\n          // drawBorder: false,\n        },\n        border:{\n          display: false,\n          dash: [8, 10],\n          \n          // borderColor: 'white',\n        },\n        ticks: {\n          color: '#F3F3F3',\n          // padding: 10,\n          // min: 100\n          font: {\n            size: 12,\n            family: 'Lato',\n            weight: 400,\n          },\n        },\n        // position: 'left',\n        // tickBorderDashOffset: 1\n        // position:{\n        //   x: 0\n        //  }\n      }\n    },\n    // labels: {\n    //   fontColor: '#F3F3F3'\n    // },\n  }","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectDynamics = state => state.dynamics;\nexport const selectStatByYear = state => state.dynamics.statByYear;\nexport const selectAccumToOneMoreMeters = state =>\n  state.dynamics.accumToOneMoreMeters;\nexport const selectAccumulatedProc = state => state.dynamics.accumulatedProc;\nexport const selectAccumulatedUah = state => state.dynamics.accumulatedUah;\nexport const selectFlatImage = state => state.dynamics.flatImage;\nexport const selectMonth = state => state.dynamics.month;\nexport const selectSquareMeters = state => state.dynamics.squareМeters;\nexport const selectYear = state => state.dynamics.year;\nexport const selectDynamicsPlanFootage = state => state.ownPlan.plan.footage;\nexport const selectDynamicsPlanCost = state => state.ownPlan.plan.cost;\n\nexport const selectorOneMoreMeterCost = createSelector(\n  [selectAccumulatedUah, selectDynamicsPlanFootage, selectDynamicsPlanCost],\n  (accumulatedUah, footage, cost) => {\n    const oneSquareMeterCost = cost / footage;\n    const oneMoreMeterCost =\n      oneSquareMeterCost > accumulatedUah\n        ? oneSquareMeterCost - accumulatedUah\n        : oneSquareMeterCost - (accumulatedUah % oneSquareMeterCost);\n\n    return oneMoreMeterCost === 0 ? oneSquareMeterCost : oneMoreMeterCost;\n  }\n);\n","// eslint-disable-next-line\nimport { selectDynamics } from 'redux/dynamics/dynamicsVariables';\n// eslint-disable-next-line\nimport { useSelector } from 'react-redux';\n\nexport const labels = [\n  'Oct',\n  'Nov',\n  'Dec',\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n];\n// const dynamics = useSelector(selectDynamics);\n\n// console.log('Chart dynamics', dynamics)\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      //   label: 'label1',\n      data: labels.map(() => 200),\n      // borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: '#6359E9',\n    },\n    {\n      //   label: 'label2',\n      data: labels.map(() => 300),\n      // borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: '#3A6AF5',\n    },\n    {\n      //   label: 'label3',\n      data: labels.map(() => 600),\n      // borderColor: 'rgb(150, 162, 150)',\n      backgroundColor: '#F3F3F3',\n    },\n  ],\n};\n","import { \n    Chart as ChartJS, \n    ArcElement, \n    Tooltip, \n    Legend, \n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useRef, useEffect } from \"react\";\nimport style from \"./Chart.module.scss\";\nimport { optionsPhone, optionsTablet } from \"services/dynamics/chartOptions\";\n// import { data } from 'services/dynamics/chartData';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDynamics } from \"redux/dynamics/dynamicsOperations\";\nimport { selectDynamics, selectStatByYear,  } from \"redux/dynamics/dynamicsVariables\";\nimport { selectorIsLoggedIn } from \"redux/auth/authSelectors\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { labels } from \"services/dynamics/chartData\";\n\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\n  LinearScale,\n  BarElement,\n  Title);\n\n// const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'];\n\nexport const Chart = () => {\n  // const matches = useMediaQuery('(min-width: 768px)');\n  const matchesTablet = useMediaQuery({ query: '(min-width: 768px)' });\n  const dispatch = useDispatch();\n  // eslint-disable-next-line\n  const dynamics = useSelector(selectDynamics);\n  const chartRef = useRef(null);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const statByYear = useSelector(selectStatByYear);\n\n  // console.log(matchesTablet)\n  // console.log('isLoggedIn ', isLoggedIn)\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      //add isLogedIn check\n      dispatch(getDynamics());\n    }\n    // console.log()\n  }, [dispatch, isLoggedIn]);\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        //   label: 'accumulated',\n        // data: labels.map((_, i) => console.log(statByYear), 300),\n        data: labels.map((_, i) => statByYear[i]?.income - statByYear[i]?.expense),\n        // borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: '#6359E9',\n      },\n      {\n        //   label: 'expenses',\n        data: labels.map((_, i) => statByYear[i]?.expense),\n        // data: labels.map((_, i) => 400),\n        // borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: '#3A6AF5',\n      },\n      {\n        //   label: 'label3',\n        data: labels.map((_, i) => statByYear[i]?.income),\n        // data: labels.map((_, i) => 500),\n        // borderColor: 'rgb(150, 162, 150)',\n        backgroundColor: '#F3F3F3',\n      },\n    ],\n  };\n  \n  return (\n    <div className={style.dynamicsChartContainer}>\n      <h1 className={style.title}>Dynamics of expenses and savings</h1>\n      <ul className={style.list}>\n        <li className={style.listItem}>Accumulated</li>\n        <li className={style.listItem}>Expenses</li>\n        <li className={style.listItem}>Income</li>\n        {/* <Doughnut  options={options} data={data} /> */}\n      </ul>\n\n      {matchesTablet ? (\n        <div className={style.chartContainer}>\n          <Bar ref={chartRef} options={optionsTablet} data={data} height={'100%'} width={'100%'} />\n        </div>\n      ) : (\n        <>\n          <p>false</p>\n          <div className={style.chartContainer}>\n            <Bar ref={chartRef} options={optionsPhone} data={data} height={'100%'} width={'100%'} />\n          </div>\n        </>\n      )}\n      {/* <div className={style.barContainer}>\n        <Bar ref={chartRef} options={options} data={data} height={'100%'} width={'100%'} />\n      </div> */}\n\n      {/* <div>\n        {`The view port is ${matches ? 'at least' : 'less than'} 768 pixels wide`}\n      </div> */}\n      <div className={style.statContainer}>\n        <div className={style.select}>\n          <p>select month</p>\n        </div>\n        <ul className={style.statList}>\n          <li className={style.statListItem}>\n            <p className={style.itemTitle}>Income, &#8372;</p>\n            <p className={style.itemNum}>60 000</p>\n          </li>\n          <li className={style.statListItem}>\n            <p className={style.itemTitle}>Expenses, &#8372;</p>\n            <p className={style.itemNum}>30 000</p>\n          </li>\n          <li className={style.statListItem}>\n            <p className={style.itemTitle}>Accumulated, &#8372;</p>\n            <p className={style.itemNum}>30 000</p>\n          </li>\n          <li className={style.statListItem}>\n            <p className={style.itemTitle}>Plan, &#8372;</p>\n            <p className={style.itemNum}>45 000</p>\n          </li>\n          <li className={style.statListItem}>\n            <p className={style.itemTitle}>Plan, %</p>\n            <p className={style.itemNum}>45 000</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"Info_infoContainer__Lmpcd\",\"title\":\"Info_title__euRFB\",\"list\":\"Info_list__TyBOA\",\"item\":\"Info_item__nT5Sh\",\"text\":\"Info_text__52E5-\",\"num\":\"Info_num__bHqjF\",\"barTitle\":\"Info_barTitle__zB1yE\",\"bar\":\"Info_bar__3VkbB\",\"barFill\":\"Info_barFill__SQkUC\",\"imageContainer\":\"Info_imageContainer__Gx+9j\",\"accRemain\":\"Info_accRemain__a01X5\",\"accTitleContainer\":\"Info_accTitleContainer__5lwC9\",\"accTitle\":\"Info_accTitle__pFO9i\",\"accSpan\":\"Info_accSpan__RdcDJ\",\"accNum\":\"Info_accNum__qbWlE\",\"svgContainer\":\"Info_svgContainer__WtBiO\"};","import React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n    const wrapperRef = useRef(null);\n    let {trigger, setTrigger} = props;\n\n    function useOutsideAlerter(ref) {\n        useEffect(() => {\n          function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setTrigger(trigger = true);\n            }\n          }\n          document.addEventListener(\"mousedown\", handleClickOutside);\n          return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n          };\n        }, [ref]);\n    }\n\n    useOutsideAlerter(wrapperRef);\n    \n    useEffect(()=>{\n        // console.log('outsideAlerter', trigger)\n    },[trigger]);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Info.module.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { postImage } from \"redux/dynamics/dynamicsOperations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport { selectorStatePlan } from \"redux/plan/planSelectors\";\nimport { \n    // selectDynamics,\n    // selectStatByYear, \n    // selectAccumToOneMoreMeters,\n    selectAccumulatedProc,\n    selectAccumulatedUah,\n    // selectFlatImage, \n    selectMonth,\n    selectSquareMeters,\n    selectYear,\n    selectorOneMoreMeterCost, \n } from \"redux/dynamics/dynamicsVariables\";\n import { OutsideClicker } from \"./OutsideKlicker\";\n\nconst baseStyle = {\n    width: '100%',\n    height: '100%',\n    // flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: 'rgba(255, 255, 255, 0.2)',\n    borderStyle: 'dashed',\n    backgroundColor: 'rgba(110, 110, 110, 0.2)',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n};\n\nexport const Info = (props) => {\n    // const dynamics = useSelector(selectDynamics);\n    // const accumToOneMoreMeters  = useSelector(selectAccumToOneMoreMeters);\n    const accumulatedProc = useSelector(selectAccumulatedProc);\n    const accumulatedUah = useSelector(selectAccumulatedUah);\n    // const flatImage = useSelector(selectFlatImage);\n    const month = useSelector(selectMonth);\n    const squareMeters = useSelector(selectSquareMeters);\n    const year = useSelector(selectYear);\n    const plan = useSelector(selectorStatePlan);\n    const oneMoreMeterCost = useSelector(selectorOneMoreMeterCost);\n    const {\n        acceptedFiles,\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        accept: {\n          'image/jpeg': [],\n          'image/png': []\n        },\n        // getFilesFromEvent: event => myCustomFileGetter(event)\n        // getFilesFromEvent: event => testFiles(event)\n    });\n    let [trigger, setTrigger] = useState(true);\n    const dispatch = useDispatch();\n    const file = acceptedFiles;\n\n    useEffect(()=>{\n    // console.log('dynamics', dynamics);\n\n        // console.log('useEffect acceptedFile', acceptedFiles)\n        if(file.length > 0) {\n            console.log('useEffect', acceptedFiles);\n            // postImage()\n            // console.log('useEffect acceptedFile', acceptedFiles)\n            const formData = new FormData();\n            formData.append('image', acceptedFiles[0]);\n\n            console.log('form data',formData);\n            dispatch(postImage(formData));\n        }\n    },[acceptedFiles, file.length, dispatch, trigger]);  \n\n    const style = useMemo(() => ({\n        ...baseStyle,\n    //   ...(isFocused ? focusedStyle : {}),\n    //   ...(isDragAccept ? acceptStyle : {}),\n    //   ...(isDragReject ? rejectStyle : {})\n    }),[]);\n    //  [\n    //   isFocused,\n    //   isDragAccept,\n    //   isDragReject\n    // ]);\n\n    function percentage(){\n        return `${(squareMeters / plan.footage * 100)}%`;\n    }\n\n    return (\n      <>\n        <div className={styles.infoContainer}>\n          <div className={styles.accumulated}>\n            <p className={styles.title}>\n              After {year} years {month} month\n            </p>\n            <ul className={styles.list}>\n              <li className={styles.item}>\n                <p className={styles.text}>Accumulated, %:</p>\n                <p className={styles.num}>{accumulatedProc}</p>\n              </li>\n              <li className={styles.item}>\n                <p className={styles.text}>Accumulated, UAH:</p>\n                <p className={styles.num}>{accumulatedUah} &#8372;</p>\n              </li>\n              <li className={styles.item}>\n                <p className={styles.text}>And This:</p>\n                <p className={styles.num}>{squareMeters} sq.m</p>\n              </li>\n            </ul>\n\n            <p className={styles.barTitle}>\n              {squareMeters} out of {plan.footage} sq.m accumulated\n            </p>\n            <div className={styles.bar}>\n              <div\n                className={styles.barFill}\n                style={{ width: percentage() }}\n              ></div>\n            </div>\n          </div>\n          <OutsideClicker trigger={trigger} setTrigger={setTrigger}>\n            {trigger ? (\n              <div\n                className={styles.imageContainer}\n                onClick={() => setTrigger(false)}\n              >\n                <p>Photo</p>\n              </div>\n            ) : (\n              <div className={styles.imageContainer}>\n                <div {...getRootProps({ style })}>\n                  <input {...getInputProps()} />\n                  <p>Drag 'n' drop some files here, or click to select files</p>\n                  <em>(Only *.jpeg and *.png images will be accepted)</em>\n                </div>\n              </div>\n            )}\n          </OutsideClicker>\n        </div>\n        <div className={styles.accRemain}>\n          <div className={styles.accTitleContainer}>\n            <p className={styles.accTitle}>\n              To add more <span className={styles.accSpan}>1 sq.m</span> for\n              planning, it remains to accumulate\n            </p>\n            <p className={styles.accNum}>\n              {Math.round(oneMoreMeterCost)} &#8372;\n            </p>\n          </div>\n          <div className={styles.svgContainer}></div>\n        </div>\n      </>\n    );\n}  ","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"DynamicsPage_section__gfswJ\"};","import { Chart } from \"components/Dynamics/Chart\";\nimport { Info } from \"components/Dynamics/Info\";\nimport style from './DynamicsPage.module.scss';\n\nconst DynamicsPage = () => {\n  return <section className={style.section}>\n    <Chart/>\n    <Info/>\n  </section>;\n};\n\nexport default DynamicsPage;\n"],"names":["optionsPhone","chartArea","bottom","maintainAspectRatio","categoryPercentage","barPercentage","indexAxis","borderRadius","elements","bar","borderWidth","responsive","plugins","legend","display","labels","font","size","title","layout","padding","left","scales","y","beginAtZero","grid","borderColor","border","ticks","color","backdropPadding","gridLines","tickMarkLength","position","x","offset","tickLength","tickBorderDash","dash","fontColor","optionsTablet","family","weight","selectDynamics","state","dynamics","selectStatByYear","statByYear","selectAccumulatedProc","accumulatedProc","selectAccumulatedUah","accumulatedUah","selectMonth","month","selectSquareMeters","squareМeters","selectYear","year","selectorOneMoreMeterCost","createSelector","ownPlan","plan","footage","cost","oneSquareMeterCost","oneMoreMeterCost","map","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Chart","matchesTablet","useMediaQuery","query","dispatch","useDispatch","chartRef","useSelector","useRef","isLoggedIn","selectorIsLoggedIn","useEffect","getDynamics","data","datasets","_","i","income","expense","backgroundColor","className","style","ref","options","height","width","OutsideClicker","props","wrapperRef","trigger","setTrigger","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","baseStyle","flexDirection","alignItems","borderStyle","outline","transition","Info","squareMeters","selectorStatePlan","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","useState","file","length","console","log","formData","FormData","append","postImage","useMemo","styles","onClick","Math","round"],"sourceRoot":""}