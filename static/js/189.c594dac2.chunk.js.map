{"version":3,"file":"static/js/189.c594dac2.chunk.js","mappings":"2JACA,MAA4B,2B,SCK5B,EAJgB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACjB,OAAO,oBAASC,UAAWC,EAApB,SAAkCF,GAC1C,C,wJCmCD,EAvCuB,CACrB,CACEG,MAAO,8BACPC,KAAM,SACNC,KAAM,OACNC,YAAa,UAEf,CACEH,MAAO,iCACPC,KAAM,gBACNC,KAAM,OACNC,YAAa,cAEf,CACEH,MAAO,kBACPC,KAAM,UACNC,KAAM,OACNC,YAAa,cAEf,CACEH,MAAO,oDACPC,KAAM,OACNC,KAAM,OACNC,YAAa,UAEf,CACEH,MAAO,uDACPC,KAAM,UACNC,KAAM,OACNC,YAAa,cAEf,CACEH,MAAO,kBACPC,KAAM,UACNC,KAAM,OACNC,YAAa,eClCjB,EAAwB,yBAAxB,EAAwD,wBAAxD,EAAwF,yBAAxF,EAAyH,yB,SCoCzH,EAjCkB,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,OAA0B,IAAlBC,OAAAA,OAAkB,MAAT,GAAS,EAClEC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3B,OACE,8BACGN,EAAQO,KAAI,SAACC,EAAIC,GAAL,OACX,mBAAOhB,UAAWC,EAAlB,WACE,kBAAMD,UAAWC,EAAjB,UACGe,EAAQ,EAAI,KACZD,EAAGb,UAGN,kBACEe,UAAQ,EACRC,aAAa,MACblB,UAAWC,EACXG,KAAMW,EAAGX,KACTD,KAAMY,EAAGZ,KACTgB,MAAOX,EAAM,OAACO,QAAD,IAACA,OAAD,EAACA,EAAIZ,OAAS,GAC3BG,SAAUA,EACVG,OAAQA,EACRJ,YAAaU,EAAGV,YAChBe,WAAsB,YAAZL,EAAGZ,OAAsBQ,KAEpCD,EAAOW,SAASN,EAAGZ,QAClB,iBAAMH,UAAWC,EAAjB,+BAnB4Bc,EAAGZ,KADxB,KA0BlB,E,UClCD,EAAsB,wBAAtB,EAAsD,0BAAtD,EAAuF,yBAAvF,EAAuH,yBAAvH,EAAuJ,yBAAvJ,EAAsL,wBAAtL,EAA2N,+BAA3N,EAA0Q,kCCwC1Q,EApCmB,SAAC,GAA4B,IAA1BmB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACzBC,GAASZ,EAAAA,EAAAA,IAAYa,EAAAA,IACrBC,GAAYd,EAAAA,EAAAA,IAAYe,EAAAA,IAE9B,OACE,iBAAK3B,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,6CACA,gBAAID,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,8BACA,eAAGD,UAAWC,EAAd,UAAsBuB,EAAOI,KAA7B,gBAEF,gBAAI5B,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,+BACA,eAAGD,UAAWC,EAAd,UAAsBuB,EAAOK,MAA7B,iBAEF,gBAAI7B,UAAWC,EAAf,WACE,mBAAQD,UAAWC,EAAcG,KAAK,SAASmB,QAASA,EAAxD,mBAGEG,IACA,mBAEE1B,UAAWC,EACXG,KAAK,SACLmB,QAASD,EAJX,iCAaX,E,UCtCD,EAAmC,0CAAnC,EAA4F,sCAA5F,EAAmJ,wCAAnJ,EAAwM,oCAAxM,EAA2P,sCAA3P,EAA0S,gCAA1S,EAAqV,kCAArV,EAAgY,gCAAhY,EAA4a,mC,UCItaQ,EAAYC,SAASC,cAAc,eAyDzC,EAvDwB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3C,GAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,QAAS,KADX,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAAOC,EAAAA,EAAAA,eACL,gBAAKxC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAkBkC,SATpB,SAAAM,GACnBA,EAAEC,iBACFP,EAASG,GACTL,GACD,EAKK,WACE,kBACEhB,UAAQ,EACRjB,UAAWC,EACXiB,aAAa,MACbd,KAAK,OACLD,KAAK,UACLE,YAAa6B,EACbf,MAAOmB,EAAKD,QACZ/B,SAvBW,SAAAmC,GACnB,MAAwBA,EAAEE,OAAlBxC,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACdoB,GAAQ,SAAAK,GAAC,yBAAUA,GAAV,cAAczC,EAAOgB,GAArB,GACV,EAqBS0B,QAAQ,YAGV,iBAAK7C,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAUG,KAAK,SAAlC,kBAGA,mBAAQJ,UAAWC,EAAYG,KAAK,SAASmB,QAASU,EAAtD,2BAKJ,mBAAQjC,UAAWC,EAAUsB,QAASU,EAAtC,UACE,SAACa,EAAA,EAAD,CACE3C,KAAK,aACL4C,MAAO,GACPC,OAAQ,GACRhD,UAAWC,WAKnB6B,EAEH,E,UCxCD,SAASmB,EAAe9B,GAItB,GAHqB,kBAAVA,IACTA,EAAQA,EAAM+B,YAEK,kBAAV/B,EAAoB,OAAO,EACtC,IAAMgC,EAAehC,EAAMiC,OAC3B,IAAKD,EAAc,OAAO,EAE1B,IADc,qBACHE,KAAKF,GAAe,OAAO,EACtC,IAAMG,EAAcC,WAAWJ,GAC/B,QAAIG,GAAe,IACfA,IAAgBC,WAAWpC,EAEhC,CAED,MAnCA,SAAwBqC,GACtB,IAAM9C,EAAS,GAEf,IAAK,IAAI+C,KAAOD,EACTP,EAAeO,EAAIC,KACtB/C,EAAOgD,KAAKD,GAGF,YAARA,GAAqBD,EAAIC,GAAO,KAClC/C,EAAOgD,KAAKD,GAIhB,OAAI/C,EAAOiD,OAAS,EACX,CAAEC,SAAS,EAAOlD,OAAAA,GAGpB,CAAEkD,SAAS,EACnB,ECjBD,EAAuB,6BAAvB,EAAwD,0B,UCwHxD,EAnGuB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWnD,EAAAA,EAAAA,IAAYoD,EAAAA,IACvBC,GAAarD,EAAAA,EAAAA,IAAYsD,EAAAA,GACzBC,GAAYvD,EAAAA,EAAAA,IAAYwD,EAAAA,IAC9B,GAA4BhC,EAAAA,EAAAA,UAAS2B,GAArC,eAAOM,EAAP,KAAeC,EAAf,KACA,GAAsClC,EAAAA,EAAAA,WAAS,GAA/C,eAAOmC,EAAP,KAAoBC,EAApB,KACA,GAAsCpC,EAAAA,EAAAA,WAAS,GAA/C,eAAOqC,EAAP,KAAoBC,EAApB,KACA,GAAsCtC,EAAAA,EAAAA,WAAS,GAA/C,eAAOuC,EAAP,KAAoBC,EAApB,KACA,GAA0BxC,EAAAA,EAAAA,UAAS,IAAnC,eAAOyC,EAAP,KAAcC,EAAd,KACMnE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,KAE3BkE,EAAAA,EAAAA,YAAU,WACRd,GAAcK,EAAUP,EACzB,GAAE,CAACA,EAAUE,IAEd,IAUMe,EAAiB,WACrB,MAA4BC,EAAeZ,GAC3C,MAAO,CAAET,QADT,EAAQA,QACUlD,OADlB,EAAiBA,OAElB,EAuCD,OACE,gCACGyD,IAAa,SAACe,EAAA,EAAD,KACd,iBAAMlF,UAAWC,EAAjB,UACE,SAAC,EAAD,CACEK,SAzDa,SAAAmC,GACnB,MAAwBA,EAAEE,OAAlBxC,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACdmD,GAAU,SAAA9D,GACR,IAAM2E,GAAS,kBAAQ3E,GAAR,cAAiBL,EAAOgB,IAGvC,OAFAuD,GAAe,GACfE,GAAe,GACRO,CACR,GACF,EAkDO5E,QAAS6E,EACT5E,OAAQ6D,EACR5D,OA7CY,WAClB,IAAM4E,EAAaC,OAAO9E,OAAO6D,GAAQkB,OAAM,SAAApE,GAAK,MAAc,KAAVA,CAAJ,IAEpD,EAA4B6D,IAApBpB,EAAR,EAAQA,QAASlD,EAAjB,EAAiBA,OAGjB,GAFA2E,GAAcP,EAASpE,GAEnB2E,GAAczB,GAAWa,EAAa,CACxC,IAAK,IAAIhB,KAAOY,EACa,kBAAhBA,EAAOZ,KAChBY,EAAOZ,GAAO+B,OAAOnB,EAAOZ,KAIhCI,GAAS4B,EAAAA,EAAAA,IAAoBpB,IAC7BK,GAAe,EAChB,CACF,EA8BOhE,OAAQmE,OAIZ,cAAG7E,UAAWC,EAAd,0JAKA,SAAC,EAAD,CAAYqB,UArBE,kBAAMkD,GAAe,EAArB,EAqBoBjD,QAhCnB,WACjB,IAAQqC,EAAYoB,IAAZpB,QAEJA,IAAYjD,EACdkD,GAAS6B,EAAAA,EAAAA,IAAiBrB,IACjBT,GAAWe,IACpBd,GAAS8B,EAAAA,EAAAA,IAAmBtB,IAC5BO,GAAe,GAElB,IAyBIL,IACC,SAAC,EAAD,CACErC,KAAK,gBACLD,WAzBW,kBAAMuC,GAAe,EAArB,EA0BXrC,SA3CiB,SAAAyD,GACvB,IAAMC,EAAW,CAAExD,QAASmD,OAAOI,EAASvD,UAC5CwB,GAASiC,EAAAA,EAAAA,IAAeD,GACzB,MA6CF,E,UCzGD,EAVoB,WAClB,OACE,SAACE,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,SAAC,EAAD,OAIP,C","sources":["webpack://ITD-React-project/./src/components/Section/Section.module.scss?893f","components/Section/Section.jsx","data/optionsDefault.js","webpack://ITD-React-project/./src/components/InputForm/InputForm.module.scss?9101","components/InputForm/InputForm.jsx","webpack://ITD-React-project/./src/components/ResultForm/ResultForm.module.scss?b712","components/ResultForm/ResultForm.jsx","webpack://ITD-React-project/./src/components/ModalAddBalance/ModalAddBalance.module.scss?6dbb","components/ModalAddBalance/ModalAddBalance.jsx","services/validateObject.js","webpack://ITD-React-project/./src/components/PlanInputsList/PlanInputsList.module.scss?e7db","components/PlanInputsList/PlanInputsList.jsx","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"vectorImg\":\"Section_vectorImg__zw3S9\"};","import s from './Section.module.scss';\n\nconst Section = ({ children }) => {\n  return <section className={s.vectorImg}>{children}</section>;\n};\n\nexport default Section;\n","const optionsDefault = [\n  {\n    title: 'RFP of both spouses, ₴',\n    name: 'salary',\n    type: 'text',\n    placeholder: '75 000',\n  },\n  {\n    title: 'Passive income, months, ₴',\n    name: 'passiveIncome',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n  {\n    title: 'Savings, ₴',\n    name: 'savings',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n  {\n    title: 'Specify the cost of your future apartment, ₴',\n    name: 'cost',\n    type: 'text',\n    placeholder: '90 000',\n  },\n  {\n    title: 'Specify the number of sq.m. of your future apartment',\n    name: 'footage',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n  {\n    title: 'Accumulation, %',\n    name: 'procent',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n];\n\nexport default optionsDefault;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"InputForm_label__xJ7fv\",\"span\":\"InputForm_span__CqJO7\",\"input\":\"InputForm_input__JQ+ft\",\"error\":\"InputForm_error__h3B-n\"};","import { useSelector } from 'react-redux';\nimport s from './InputForm.module.scss';\nimport { selectorIsPlan } from 'redux/plan/planSelectors';\n\nconst InputForm = ({ onChange, options, values, onBlur, errors = [] }) => {\n  const isPlan = useSelector(selectorIsPlan);\n\n  return (\n    <>\n      {options.map((el, index) => (\n        <label className={s.label} key={el.name}>\n          <span className={s.span}>\n            {index + 1 + '. '}\n            {el.title}\n          </span>\n\n          <input\n            required\n            autoComplete=\"off\"\n            className={s.input}\n            type={el.type}\n            name={el.name}\n            value={values[el?.name] || ''}\n            onChange={onChange}\n            onBlur={onBlur}\n            placeholder={el.placeholder}\n            disabled={el.name === 'savings' && isPlan ? true : false}\n          />\n          {errors.includes(el.name) && (\n            <span className={s.error}> invalid value </span>\n          )}\n        </label>\n      ))}\n    </>\n  );\n};\n\nexport default InputForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ResultForm_box__BPZG-\",\"title\":\"ResultForm_title__-zEMh\",\"list\":\"ResultForm_list__lvVlU\",\"item\":\"ResultForm_item__qbVxC\",\"text\":\"ResultForm_text__H+eFW\",\"res\":\"ResultForm_res__5W2t1\",\"buttonFits\":\"ResultForm_buttonFits__LFnXS\",\"buttonBalance\":\"ResultForm_buttonBalance__dlb4b\"};","import { useSelector } from 'react-redux';\nimport { selectorStateResult } from 'redux/plan/planSelectors';\nimport { selectorIsBalance } from 'redux/auth/authSelectors';\nimport s from './ResultForm.module.scss';\n\nconst ResultForm = ({ openModal, onClick }) => {\n  const result = useSelector(selectorStateResult);\n  const isBalance = useSelector(selectorIsBalance);\n\n  return (\n    <div className={s.box}>\n      <h2 className={s.title}>You will have an apartment in:</h2>\n      <ul className={s.list}>\n        <li className={s.item}>\n          <p className={s.text}>Number of years</p>\n          <p className={s.res}>{result.year} years</p>\n        </li>\n        <li className={s.item}>\n          <p className={s.text}>Number of months</p>\n          <p className={s.res}>{result.month} months</p>\n        </li>\n        <li className={s.item}>\n          <button className={s.buttonFits} type=\"button\" onClick={onClick}>\n            Fits\n          </button>\n          {!isBalance && (\n            <button\n              // disabled={isBalance}\n              className={s.buttonBalance}\n              type=\"button\"\n              onClick={openModal}\n            >\n              Add Balance\n            </button>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ResultForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"ModalAddBalance_overlayAddIncome__uiJZA\",\"modalWrapper\":\"ModalAddBalance_modalWrapper__5ApL1\",\"modalAddIncome\":\"ModalAddBalance_modalAddIncome__qYqtL\",\"modalInput\":\"ModalAddBalance_modalInput__LRtN4\",\"btnContainer\":\"ModalAddBalance_btnContainer__cUmYC\",\"btnAdd\":\"ModalAddBalance_btnAdd__Bi-8a\",\"btnClose\":\"ModalAddBalance_btnClose__zyVWf\",\"btnSvg\":\"ModalAddBalance_btnSvg__lAcxc\",\"iconClose\":\"ModalAddBalance_iconClose__HAppv\"};","import Icon from 'components/Icon/Icon';\nimport s from './ModalAddBalance.module.scss';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalAddBalance = ({ closeModal, text, onSubmit }) => {\n  const [form, setForm] = useState({\n    balance: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setForm(p => ({ ...p, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(form);\n    closeModal();\n  };\n\n  return createPortal(\n    <div className={s.overlayAddIncome}>\n      <div className={s.modalWrapper}>\n        <form className={s.modalAddIncome} onSubmit={handleSubmit}>\n          <input\n            required\n            className={s.modalInput}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"balance\"\n            placeholder={text}\n            value={form.balance}\n            onChange={handleChange}\n            pattern=\"[0-9]*\"\n          />\n\n          <div className={s.btnContainer}>\n            <button className={s.btnAdd} type=\"submit\">\n              Add\n            </button>\n            <button className={s.btnClose} type=\"button\" onClick={closeModal}>\n              Cancel\n            </button>\n          </div>\n        </form>\n        <button className={s.btnSvg} onClick={closeModal}>\n          <Icon\n            name=\"icon-close\"\n            width={24}\n            height={24}\n            className={s.iconClose}\n          />\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalAddBalance;\n","function validateObject(obj) {\n  const errors = [];\n\n  for (let key in obj) {\n    if (!validateNumber(obj[key])) {\n      errors.push(key);\n    }\n\n    if (key === 'procent' && obj[key] > 100) {\n      errors.push(key);\n    }\n  }\n\n  if (errors.length > 0) {\n    return { isValid: false, errors };\n  }\n\n  return { isValid: true };\n}\n\nfunction validateNumber(value) {\n  if (typeof value === 'number') {\n    value = value.toString();\n  }\n  if (typeof value !== 'string') return false;\n  const trimmedValue = value.trim();\n  if (!trimmedValue) return false;\n  const regex = /^[+-]?\\d+(\\.\\d+)?$/;\n  if (!regex.test(trimmedValue)) return false;\n  const parsedValue = parseFloat(trimmedValue);\n  if (parsedValue <= 0) return false;\n  if (parsedValue !== parseFloat(value)) return false;\n  return true;\n}\n\nexport default validateObject;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PlanInputsList_form__Oi2eI\",\"p\":\"PlanInputsList_p__bnCRJ\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectorIsPlan,\n  selectorPlanIsLoading,\n  selectorStatePlan,\n} from 'redux/plan/planSelectors';\nimport {\n  calcPersonalPlan,\n  preCalcPersonalPlan,\n  updatePersonalPlan,\n} from 'redux/plan/planOperations';\nimport optionsDefault from 'data/optionsDefault';\nimport InputForm from 'components/InputForm/InputForm';\nimport ResultForm from 'components/ResultForm/ResultForm';\nimport ModalAddBalance from 'components/ModalAddBalance/ModalAddBalance';\nimport { addUserBalance } from 'redux/auth/authOperations';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport validateObject from 'services/validateObject';\nimport s from './PlanInputsList.module.scss';\nimport Loader from 'components/Loader/Loader';\n\nconst PlanInputsList = () => {\n  const dispatch = useDispatch();\n  const formData = useSelector(selectorStatePlan);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const isLoading = useSelector(selectorPlanIsLoading);\n  const [inputs, setInputs] = useState(formData);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isBlurDirty, setIsBlurDirty] = useState(false);\n  const [isFitsDirty, setIsFitsDirty] = useState(false);\n  const [error, setError] = useState([]);\n  const isPlan = useSelector(selectorIsPlan);\n\n  useEffect(() => {\n    isLoggedIn && setInputs(formData);\n  }, [formData, isLoggedIn]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(values => {\n      const newInputs = { ...values, [name]: value };\n      setIsBlurDirty(true);\n      setIsFitsDirty(true);\n      return newInputs;\n    });\n  };\n\n  const isValidObjFunc = () => {\n    const { isValid, errors } = validateObject(inputs);\n    return { isValid, errors };\n  };\n\n  const handlerBlur = () => {\n    const isComplete = Object.values(inputs).every(value => value !== '');\n\n    const { isValid, errors } = isValidObjFunc();\n    isComplete && setError(errors);\n\n    if (isComplete && isValid && isBlurDirty) {\n      for (let key in inputs) {\n        if (typeof inputs[key] === 'string') {\n          inputs[key] = Number(inputs[key]);\n        }\n      }\n\n      dispatch(preCalcPersonalPlan(inputs));\n      setIsBlurDirty(false);\n    }\n  };\n\n  const handleAddBalance = dataForm => {\n    const pBalance = { balance: Number(dataForm.balance) };\n    dispatch(addUserBalance(pBalance));\n  };\n\n  const handleFits = () => {\n    const { isValid } = isValidObjFunc();\n    \n    if (isValid && !isPlan) {\n      dispatch(calcPersonalPlan(inputs));\n    } else if (isValid && isFitsDirty) {\n      dispatch(updatePersonalPlan(inputs));\n      setIsFitsDirty(false);\n    }\n  };\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <form className={s.form}>\n        <InputForm\n          onChange={handleChange}\n          options={optionsDefault}\n          values={inputs}\n          onBlur={handlerBlur}\n          errors={error}\n        />\n      </form>\n\n      <p className={s.p}>\n        Specify the percentage that you would like to accumulate per month from\n        the total amount of income and you will see when you reach the goal\n      </p>\n\n      <ResultForm openModal={openModal} onClick={handleFits} />\n\n      {isModalOpen && (\n        <ModalAddBalance\n          text=\"Enter balance\"\n          closeModal={closeModal}\n          onSubmit={handleAddBalance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PlanInputsList;\n","import Container from 'components/Container/Container';\nimport PlanInputsList from 'components/PlanInputsList/PlanInputsList';\nimport Section from 'components/Section/Section';\n\nconst OwnPlanPage = () => {\n  return (\n    <Section>\n      <Container>\n        <PlanInputsList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["children","className","s","title","name","type","placeholder","onChange","options","values","onBlur","errors","isPlan","useSelector","selectorIsPlan","map","el","index","required","autoComplete","value","disabled","includes","openModal","onClick","result","selectorStateResult","isBalance","selectorIsBalance","year","month","modalRoot","document","querySelector","closeModal","text","onSubmit","useState","balance","form","setForm","createPortal","e","preventDefault","target","p","pattern","Icon","width","height","validateNumber","toString","trimmedValue","trim","test","parsedValue","parseFloat","obj","key","push","length","isValid","dispatch","useDispatch","formData","selectorStatePlan","isLoggedIn","selectorIsLoggedIn","isLoading","selectorPlanIsLoading","inputs","setInputs","isModalOpen","setIsModalOpen","isBlurDirty","setIsBlurDirty","isFitsDirty","setIsFitsDirty","error","setError","useEffect","isValidObjFunc","validateObject","Loader","newInputs","optionsDefault","isComplete","Object","every","Number","preCalcPersonalPlan","calcPersonalPlan","updatePersonalPlan","dataForm","pBalance","addUserBalance","Section","Container"],"sourceRoot":""}